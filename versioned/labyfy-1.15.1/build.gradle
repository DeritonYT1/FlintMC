import org.apache.commons.io.FileUtils

plugins {
    id 'application'
}

group 'net.labyfy.versioned'

sourceCompatibility = 1.8

labyfy{
    version "1.15.1"
    provideMappings true
    publishToken "${publish_token}"
}


repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile project(':component:launcher')

    runtimeOnly project(':component:base')
    runtimeOnly project(':component:transform:javassist')
    runtimeOnly project(':component:transform:asm')
    runtimeOnly project(':component:transform:minecraft')
    runtimeOnly project(':component:transform:minecraft-obfuscator')
    runtimeOnly project(':component:transform:hook')
    runtimeOnly project(':component:gui')
    runtimeOnly project(':component:gui:mcjfxgl')
    runtimeOnly project(':component:gui:mcjfxgl:mcjfxgl-1.15.1')
    runtimeOnly project(':component:gui:mcjfxgl:default-components')
    runtimeOnly project(':component:gui:gui-1.15.1')
    runtimeOnly project(':component:tasks')
    runtimeOnly project(':component:tasks:tasks-1.15.1')
    runtimeOnly project(':component:mapping')
    runtimeOnly project(':component:inject')
    runtimeOnly project(':component:transform:hook')
    runtimeOnly project(':component:resources')
    runtimeOnly project(':component:resources:resources-1.15.1')
    runtimeOnly project(':versioned:labyfy-1.15.1')
    runtimeOnly project(':component:packages')
    runtimeOnly project(':component:packages:packages-impl')

    labyManifest project(':component:base')
    labyManifest project(':component:transform:javassist')
    labyManifest project(':component:transform:asm')
    labyManifest project(':component:transform:minecraft')
    labyManifest project(':component:transform:minecraft-obfuscator')
    labyManifest project(':component:transform:hook')
    labyManifest project(':component:gui')
    labyManifest project(':component:gui:mcjfxgl')
    labyManifest project(':component:gui:mcjfxgl:mcjfxgl-1.15.1')
    labyManifest project(':component:gui:mcjfxgl:default-components')
    labyManifest project(':component:gui:gui-1.15.1')
    labyManifest project(':component:tasks')
    labyManifest project(':component:tasks:tasks-1.15.1')
    labyManifest project(':component:mapping')
    labyManifest project(':component:inject')
    labyManifest project(':component:transform:hook')
    labyManifest project(':component:resources')
    labyManifest project(':component:resources:resources-1.15.1')
    labyManifest project(':component:packages')
    labyManifest project(':component:packages:packages-impl')
    labyManifest project(':component:transform:launcher-plugin')
    labyManifest project(':component:launcher')
    labyManifest project(':component:service')
    labyManifest project(':component:security')
}

application {
    mainClassName "net.labyfy.component.launcher.LabyLauncher"
}

distTar.enabled = false
distZip.enabled = false
installDist.enabled = false;
startScripts.enabled = false

def runDir = new File(rootProject.projectDir, "run/1.15.1")
def runDirTemplate = new File(rootProject.projectDir, "run-template")
if (!runDir.exists()) {
    if (!runDir.mkdirs()) {
        throw new GradleException("Failed to create run directory: ${runDir.absolutePath}")
    } else {
        copy {
            from new File(runDirTemplate, "1.15.1")
            into runDir
        }
    }
}

run {
    workingDir runDir
    args "--uuid", "113da2d6-3c68-43c4-bee0-6f53fe8906e6",
            "--username", "DevTastisch",
            "--accessToken", "0",
            "--version", "1.15.1",
            "--assetsDir", "assets",
            "--assetIndex", "1.15",
            "--userProperties", "{}",
            "--gameDir", ".",
            "--tweakClass", "net.labyfy.component.transform.tweaker.LabyDebugTweaker"
    dependsOn 'copyMappings'
}

task copyMappings() {
    doLast {
        def extracted = new File(project.buildDir, "labyfy/mappings/1.15.1/extracted");
        FileUtils.copyFile(new File(extracted, "fields.csv"), new File(project.parent.parent.projectDir, "run/1.15.1/Labyfy/assets/1.15.1/fields.csv") )
        FileUtils.copyFile(new File(extracted, "methods.csv"), new File(project.parent.parent.projectDir, "run/1.15.1/Labyfy/assets/1.15.1/methods.csv") )
        FileUtils.copyFile(new File(extracted, "params.csv"), new File(project.parent.parent.projectDir, "run/1.15.1/Labyfy/assets/1.15.1/params.csv") )
        FileUtils.copyFile(new File(extracted, "joined.tsrg"), new File(project.parent.parent.projectDir, "run/1.15.1/Labyfy/assets/1.15.1/joined.tsrg") )
    }
}
