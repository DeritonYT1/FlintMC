package net.flintmc.framework.config.annotation.implemented;

import net.flintmc.framework.config.annotation.Config;
import net.flintmc.framework.inject.implement.Implement;
import net.flintmc.processing.autoload.DetectableAnnotation;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Marks an interface inside of a {@link Config} as already implemented and not to be autogenerated, more information
 * can be found in the {@link Config}.
 * <p>
 * If a config is annotated with this annotation, don't use {@link Implement} on the implementation but instead use
 * {@link ConfigImplementation}. This makes sure, that the class won't get loaded too early and therefore cannot be
 * transformed.
 *
 * @see Config
 * @see ConfigImplementation
 */
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.TYPE)
@DetectableAnnotation
public @interface ImplementedConfig {

}
