rootProject.name = 'labyfy'

include 'component:transform:exceptions'
findProject(':component:transform:exceptions')?.name = "exceptions"

include 'component:transform:javassist'
findProject(':component:transform:javassist')?.name = "javassist"

include 'component:initializer'
findProject(':component:initializer')?.name = 'initializer'

include 'component:tasks'
findProject(':component::tasks')?.name = 'tasks'

include 'component:stereotype'
findProject(':component:stereotype')?.name = "stereotype"

include 'component:transform:minecraft'
findProject(':component:transform:minecraft')?.name = 'minecraft'

include 'component:mapping'
findProject(':component:mapping')?.name = 'mapping'

include 'component:inject'
findProject(':component:inject')?.name = 'inject'

include 'component:transform:asm'
findProject(':component:transform:asm')?.name = 'asm'

include 'component:gui'
findProject(':component:gui')?.name = 'gui'

include 'component:gui:juklearmc'
findProject(':component:gui:juklearmc')?.name = 'juklearmc'

include 'component:transform:hook'
findProject(':component:transform:hook')?.name = 'hook'

include 'component:resources'
findProject(':component:resources')?.name = 'resources'

include 'component:packages'
findProject(':component:packages')?.name = 'packages'

include 'component:launcher'
findProject(':component:launcher')?.name = 'launcher'

include 'component:transform:launcher-plugin'
findProject(':component:transform:launch-plugin')?.name = 'launcher-plugin'

include 'component:annotation-processing'
findProject(':component:annotation-processing')?.name = 'annotation-processing'

include 'component:transform:minecraft-obfuscator'
findProject(':component:transform:minecraft-obfuscator')?.name = 'minecraft-obfuscator'

include ':component:annotation-processing:autoload'
findProject(':component:annotation-processing:autoload')?.name = 'autoload'

ext.isPush = true

buildCache {
    local {
        enabled = false
    }

    remote(HttpBuildCache) {
        url = System.getenv().getOrDefault('artifactory_contextUrl', "${artifactory_contextUrl}")
        credentials {
            username = System.getenv().getOrDefault("artifactory_user", "${artifactory_user}")
            password = System.getenv().getOrDefault("artifactory_password", "${artifactory_password}")
        }
        push = isPush
    }
}

include 'component:service'
findProject(':component:service')?.name = 'service'

include 'component:security'
findProject('component:security')?.name = 'security'

include 'component:commons'
findProject(':component:commons')?.name = 'commons'

include 'component:csv'
findProject(':component:csv')?.name = 'csv'

include ':component:inject-primitive'
findProject(':component:inject-primitive')?.name = 'inject-primitive'

include 'component:i18n'
findProject('component:i18n')?.name = 'i18n'

include 'component:chat'
findProject(':component:chat')?.name = 'chat'

include 'component:player'
findProject(':component:player')?.name = 'player'

include 'component:eventbus'
findProject(':component:eventbus')?.name = 'eventbus'

include 'component:world'
findProject(':component:world')?.name = 'world'

include 'component:transform:shadow'
findProject(':component:transform:shadow')?.name = 'shadow'

