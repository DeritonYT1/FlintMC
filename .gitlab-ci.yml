stages:
  - version
  - build
  - test
  - deploy
  - publish
  - replay

variables:
  SCRIPTS_REPO: "git@git.labymod.net:client/labymod4/common-scripts.git"

before_script:
  - mkdir -p ~/.ssh && chmod 700 ~/.ssh
  - ssh-keyscan git.labymod.net >> ~/.ssh/known_hosts && chmod 644 ~/.ssh/known_hosts
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH_PRIVATE_KEY")
  - export SCRIPTS_DIR=$(mktemp -d)
  - git clone -q --depth 1 "$SCRIPTS_REPO" "$SCRIPTS_DIR"
  - bash $SCRIPTS_DIR/genSemVer.sh build ${CI_JOB_ID} > version
  - sed -i "s/version .*/version '$(cat version)'/1" build.gradle

version:
  stage: version
  script:
    - bash $SCRIPTS_DIR/versionPreCheck.sh "${CI_COMMIT_MESSAGE}"
    - bash $SCRIPTS_DIR/genSemVer.sh $(cat BUMP_TYPE) > version
    - export TAG=$(cat version)
    - git config --global user.email "gitlab-ci@gitlab.labymod.net"
    - git config --global user.name "gitlab-ci"
    - git remote set-url --push origin "git@git.labymod.net:client/labymod4/Labyfy.git"
    - git tag -a ${TAG} -m "${CI_COMMIT_MESSAGE}"
    - git push origin ${TAG}
  artifacts:
    paths:
      - version
  only:
    - master

build:
  stage: build
  script:
    - sh $SCRIPTS_DIR/eval.sh
    - sh $SCRIPTS_DIR/eval.sh "./library-downloader/"
    - mkdir run && cp -r run-template/1.15.1 run && cp -r run-template/1.15.1/Labyfy versioned/labyfy-1.15.1 && ls -la versioned/labyfy-1.15.1
    - cd versioned/labyfy-1.15.1 && sh ../../gradlew :versioned:labyfy-1.15.1:download-libraries --refresh-dependencies && cd ../..
    - sh gradlew build --refresh-dependencies
  artifacts:
    name: $(cat version)
    paths:
      - build/libs
  only:
    - branches
  retry: 2
  except:
    - master

deploy_to_artifactory:
  stage: deploy
  script:
    - sh $SCRIPTS_DIR/eval.sh
    - sh $SCRIPTS_DIR/eval.sh "./library-downloader/"
    - mkdir run && cp -r run-template/1.15.1 run && cp -r run-template/1.15.1/Labyfy versioned/labyfy-1.15.1 && ls -la versioned/labyfy-1.15.1
    - cd versioned/labyfy-1.15.1 && sh ../../gradlew :versioned:labyfy-1.15.1:download-libraries --refresh-dependencies && cd ../..
    - bash $SCRIPTS_DIR/branchingPreCheck.sh
    - bash $SCRIPTS_DIR/genSemVer.sh prerel SNAPSHOT > version || exit 1
    - cat version
    - sed -i "s/version .*/version '$(cat version)'/1" build.gradle
    - sh gradlew artifactoryPublish
  environment:
    name: development
  only:
    - develop
  when: on_success
  retry: 2

publish_version:
  stage: publish
  script:
    - sh $SCRIPTS_DIR/eval.sh
    - sh $SCRIPTS_DIR/eval.sh "./library-downloader/"
    - mkdir run && cp -r run-template/1.15.1 run && cp -r run-template/1.15.1/Labyfy versioned/labyfy-1.15.1 && ls -la versioned/labyfy-1.15.1
    - cd versioned/labyfy-1.15.1 && sh ../../gradlew :versioned:labyfy-1.15.1:download-libraries --refresh-dependencies && cd ../..
    - bash $SCRIPTS_DIR/branchingPreCheck.sh
    - bash $SCRIPTS_DIR/genSemVer.sh release > version || exit 1
    - cat version
    - sed -i "s/version .*/version '$(cat version)'/1" build.gradle
    - sh gradlew artifactoryPublish
    - echo "CURL TO LM_DISTRIBUTOR \n for $(cat version) with changelog $(cat CHANGELOG)"
  environment:
    name: production
  only:
    - tags
  when: on_success

update_develop_version:
  stage: replay
  script:
    - git checkout origin/develop
    - git pull origin master
    - bash $SCRIPTS_DIR/genSemVer.sh release > version || exit 1
    - export VERSION=$(cat version)
    - sed -i "s/version .*/version '${VERSION}'/1" build.gradle
    - rm -r semver-tool
    - rm version
    - git commit -a -m "${VERSION}"
    - git config --global push.default simple
    - git push origin HEAD:develop
  only:
    - tags
  when: on_success